{
  "address": "0x389125d9652CE4E2d7Db9218d79B5e4cfe0ae128",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x87a43529a5298d0d7307f0265197170b3487daccb24ac6869571070a40b6ae5a",
  "receipt": {
    "to": null,
    "from": "0xC85C392654B161E9a16f8f8766Db5E75620dD276",
    "contractAddress": "0x389125d9652CE4E2d7Db9218d79B5e4cfe0ae128",
    "transactionIndex": 5,
    "gasUsed": "300949",
    "logsBloom": "0x
    "blockHash": "0xeb235ceaef2361955cc77b2817674113344caea896d5ed489e65a14e3b3eff5c",
    "transactionHash": "0x87a43529a5298d0d7307f0265197170b3487daccb24ac6869571070a40b6ae5a",
    "logs": [
      {
        "transactionIndex": 5,
        "blockNumber": 3517342,
        "transactionHash": "0x87a43529a5298d0d7307f0265197170b3487daccb24ac6869571070a40b6ae5a",
        "address": "0x389125d9652CE4E2d7Db9218d79B5e4cfe0ae128",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c85c392654b161e9a16f8f8766db5e75620dd276"
        ],
        "data": "0x",
        "logIndex": 8,
        "blockHash": "0xeb235ceaef2361955cc77b2817674113344caea896d5ed489e65a14e3b3eff5c"
      },
      {
        "transactionIndex": 5,
        "blockNumber": 3517342,
        "transactionHash": "0x87a43529a5298d0d7307f0265197170b3487daccb24ac6869571070a40b6ae5a",
        "address": "0x389125d9652CE4E2d7Db9218d79B5e4cfe0ae128",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x000000000000000000000000c85c392654b161e9a16f8f8766db5e75620dd276",
          "0x000000000000000000000000f7bc87d78b4f2d5e95e8b2af63119b8818ef132e"
        ],
        "data": "0x",
        "logIndex": 9,
        "blockHash": "0xeb235ceaef2361955cc77b2817674113344caea896d5ed489e65a14e3b3eff5c"
      }
    ],
    "blockNumber": 3517342,
    "cumulativeGasUsed": "818655",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xf7bC87d78B4F2D5E95e8B2af63119B8818ef132e"
  ],
  "numDeployments": 1,
  "solcInputHash": "d01903d1582bb4523c7d80a74346dca8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Treasury.sol\":\"Treasury\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Treasury.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract Treasury is Ownable {\\r\\n    constructor(address _governance) {\\r\\n        transferOwnership(_governance);\\r\\n    }\\r\\n\\r\\n    function transfer(uint256 amount, address to) public onlyOwner {\\r\\n        payable(to).transfer(amount);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x6a0f82161f65485df4cdbde563283f3ebaee5fbec3084c7fdee3f084c1547579\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516105d83803806105d883398101604081905261002f91610138565b61003833610047565b61004181610097565b506101e5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61009f6100da565b6001600160a01b0381166100ce5760405162461bcd60e51b81526004016100c590610161565b60405180910390fd5b6100d781610047565b50565b6000546001600160a01b031633146101045760405162461bcd60e51b81526004016100c5906101ab565b565b60006001600160a01b0382165b92915050565b61012281610106565b81146100d757600080fd5b805161011381610119565b60006020828403121561014d5761014d600080fd5b6000610159848461012d565b949350505050565b6020808252810161011381602681527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160208201526564647265737360d01b604082015260600190565b60208082528181019081527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604083015260608201610113565b6103e4806101f46000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638da5cb5b1461005b578063b7760c8f1461008a578063f2fde38b1461009d575b600080fd5b6100596100b0565b005b60005473ffffffffffffffffffffffffffffffffffffffff166040516100819190610273565b60405180910390f35b6100596100983660046102ad565b6100c4565b6100596100ab3660046102ea565b610114565b6100b861017e565b6100c260006101cf565b565b6100cc61017e565b60405173ffffffffffffffffffffffffffffffffffffffff82169083156108fc029084906000818181858888f1935050505015801561010f573d6000803e3d6000fd5b505050565b61011c61017e565b73ffffffffffffffffffffffffffffffffffffffff8116610172576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016990610313565b60405180910390fd5b61017b816101cf565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146100c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016990610374565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600073ffffffffffffffffffffffffffffffffffffffff82165b92915050565b61026d81610244565b82525050565b6020810161025e8284610264565b805b811461017b57600080fd5b803561025e81610281565b61028381610244565b803561025e81610299565b600080604083850312156102c3576102c3600080fd5b60006102cf858561028e565b92505060206102e0858286016102a2565b9150509250929050565b6000602082840312156102ff576102ff600080fd5b600061030b84846102a2565b949350505050565b6020808252810161025e81602681527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160208201527f6464726573730000000000000000000000000000000000000000000000000000604082015260600190565b60208082528181019081527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408301526060820161025e56fea264697066735822122057d8607897da9cf65ac6636c65751019d2dd5fe9ec08d0cd0f3977387a3cb61264736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638da5cb5b1461005b578063b7760c8f1461008a578063f2fde38b1461009d575b600080fd5b6100596100b0565b005b60005473ffffffffffffffffffffffffffffffffffffffff166040516100819190610273565b60405180910390f35b6100596100983660046102ad565b6100c4565b6100596100ab3660046102ea565b610114565b6100b861017e565b6100c260006101cf565b565b6100cc61017e565b60405173ffffffffffffffffffffffffffffffffffffffff82169083156108fc029084906000818181858888f1935050505015801561010f573d6000803e3d6000fd5b505050565b61011c61017e565b73ffffffffffffffffffffffffffffffffffffffff8116610172576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016990610313565b60405180910390fd5b61017b816101cf565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146100c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016990610374565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600073ffffffffffffffffffffffffffffffffffffffff82165b92915050565b61026d81610244565b82525050565b6020810161025e8284610264565b805b811461017b57600080fd5b803561025e81610281565b61028381610244565b803561025e81610299565b600080604083850312156102c3576102c3600080fd5b60006102cf858561028e565b92505060206102e0858286016102a2565b9150509250929050565b6000602082840312156102ff576102ff600080fd5b600061030b84846102a2565b949350505050565b6020808252810161025e81602681527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160208201527f6464726573730000000000000000000000000000000000000000000000000000604082015260600190565b60208082528181019081527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408301526060820161025e56fea264697066735822122057d8607897da9cf65ac6636c65751019d2dd5fe9ec08d0cd0f3977387a3cb61264736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 26,
        "contract": "contracts/Treasury.sol:Treasury",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}
{
  "address": "0x5672FeBaCABD8cb94d939046ca7f319fB3ed203a",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "executionTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "description",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "contract IGovernance",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "setGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xbde68722f56c314b487d86e3b8214c5a1110edca3a704e43ea00cfae32c4ea5a",
  "receipt": {
    "to": null,
    "from": "0xC85C392654B161E9a16f8f8766Db5E75620dD276",
    "contractAddress": "0x5672FeBaCABD8cb94d939046ca7f319fB3ed203a",
    "transactionIndex": 3,
    "gasUsed": "1278101",
    "logsBloom": "0x
    "blockHash": "0x0edff99fd02570ad2f547e4c73ea04070413dfb5e25dc66cffb8f747628bfd45",
    "transactionHash": "0xbde68722f56c314b487d86e3b8214c5a1110edca3a704e43ea00cfae32c4ea5a",
    "logs": [
      {
        "transactionIndex": 3,
        "blockNumber": 3517327,
        "transactionHash": "0xbde68722f56c314b487d86e3b8214c5a1110edca3a704e43ea00cfae32c4ea5a",
        "address": "0x5672FeBaCABD8cb94d939046ca7f319fB3ed203a",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c85c392654b161e9a16f8f8766db5e75620dd276"
        ],
        "data": "0x",
        "logIndex": 5,
        "blockHash": "0x0edff99fd02570ad2f547e4c73ea04070413dfb5e25dc66cffb8f747628bfd45"
      }
    ],
    "blockNumber": 3517327,
    "cumulativeGasUsed": "2069876",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "7f98f623f90b3336f39c5358ee40009d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executionTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"description\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"contract IGovernance\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"setGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Automation.sol\":\"Automation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":99999},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Automation.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"./IGovernance.sol\\\";\\r\\n\\r\\ncontract Automation is AutomationCompatibleInterface, Ownable {\\r\\n    IGovernance public governance;\\r\\n\\r\\n    IGovernance.CurrentProposal public currentProposal;\\r\\n\\r\\n    function setGovernance(address _governance) public onlyOwner {\\r\\n        require(\\r\\n            address(governance) == address(0),\\r\\n            \\\"Governance contract has already set!\\\"\\r\\n        );\\r\\n        governance = IGovernance(_governance);\\r\\n    }\\r\\n\\r\\n    function checkUpkeep(\\r\\n        bytes calldata /* checkData */\\r\\n    )\\r\\n        external\\r\\n        override\\r\\n        returns (bool upkeepNeeded, bytes memory /* performData */)\\r\\n    {\\r\\n        currentProposal = governance.getCurrentProposal();\\r\\n        upkeepNeeded =\\r\\n            (currentProposal.proposalId != 0) &&\\r\\n            (governance.isReadyToExecution()) &&\\r\\n            (currentProposal.executionTime >= block.timestamp);\\r\\n    }\\r\\n\\r\\n    function performUpkeep(bytes calldata /* performData */) external override {\\r\\n        currentProposal = governance.getCurrentProposal();\\r\\n        require(\\r\\n            (currentProposal.executionTime >= block.timestamp) &&\\r\\n                (governance.isReadyToExecution()) &&\\r\\n                (currentProposal.executionTime >= block.timestamp)\\r\\n        );\\r\\n        governance.execute(\\r\\n            currentProposal.targets,\\r\\n            currentProposal.values,\\r\\n            currentProposal.calldatas,\\r\\n            currentProposal.description\\r\\n        );\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x283df9bb0e7836a0e87d7b5a4ec263696bbf075aae7a474a223b0efa8183d0e3\",\"license\":\"MIT\"},\"contracts/IGovernance.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\ninterface IGovernance {\\r\\n    struct CurrentProposal {\\r\\n        uint256 proposalId;\\r\\n        uint256 executionTime;\\r\\n        address[] targets;\\r\\n        uint256[] values;\\r\\n        bytes[] calldatas;\\r\\n        bytes32 description;\\r\\n    }\\r\\n\\r\\n    function execute(\\r\\n        address[] memory targets,\\r\\n        uint256[] memory values,\\r\\n        bytes[] memory calldatas,\\r\\n        bytes32 descriptionHash\\r\\n    ) external payable returns (uint256);\\r\\n\\r\\n    function getCurrentProposal()\\r\\n        external\\r\\n        view\\r\\n        returns (CurrentProposal memory);\\r\\n\\r\\n    function isReadyToExecution() external view returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0x195084fa96037c1569fb70c8c5fa15efce5e3ffdec0cd484ab0ddeca91859db1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6115c28061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063715018a61161005b578063715018a61461011a5780638da5cb5b14610122578063ab033ea914610148578063f2fde38b1461015b57600080fd5b80632b49d4251461008d5780634585e33b146100b75780635aa6e675146100cc5780636e04ff0d146100f9575b600080fd5b60025460035460075461009f92919083565b6040516100ae9392919061092d565b60405180910390f35b6100ca6100c53660046109af565b61016e565b005b6001546100ec9073ffffffffffffffffffffffffffffffffffffffff1681565b6040516100ae9190610a59565b61010c6101073660046109af565b6103e9565b6040516100ae929190610ae3565b6100ca6105bf565b60005473ffffffffffffffffffffffffffffffffffffffff166040516100ae9190610b2a565b6100ca610156366004610b57565b6105d3565b6100ca610169366004610b57565b61067b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341ec68706040518163ffffffff1660e01b8152600401600060405180830381865afa1580156101db573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526102219190810190610f6d565b80516002908155602080830151600355604083015180516102469260049201906107a2565b506060820151805161026291600384019160209091019061082c565b506080820151805161027e916004840191602090910190610867565b5060a09190910151600590910155600354421180159061032a5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631ad85cb56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610306573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032a9190610fbb565b801561033857506003544211155b61034157600080fd5b6001546007546040517f2656227d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90921691632656227d916103a191600491600591600691908401611231565b6020604051808303816000875af11580156103c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e49190611282565b505050565b60006060600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341ec68706040518163ffffffff1660e01b8152600401600060405180830381865afa15801561045a573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104a09190810190610f6d565b80516002908155602080830151600355604083015180516104c59260049201906107a2565b50606082015180516104e191600384019160209091019061082c565b50608082015180516104fd916004840191602090910190610867565b5060a09190910151600590910155600254158015906105a85750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631ad85cb56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610584573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a89190610fbb565b80156105b657506003544211155b91509250929050565b6105c76106dc565b6105d1600061072d565b565b6105db6106dc565b60015473ffffffffffffffffffffffffffffffffffffffff1615610634576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062b90611300565b60405180910390fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6106836106dc565b73ffffffffffffffffffffffffffffffffffffffff81166106d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062b9061136a565b6106d98161072d565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062b9061137a565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821561081c579160200282015b8281111561081c57825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906107c2565b506108289291506108b9565b5090565b82805482825590600052602060002090810192821561081c579160200282015b8281111561081c57825182559160200191906001019061084c565b8280548282559060005260206000209081019282156108ad579160200282015b828111156108ad578251829061089d908261146e565b5091602001919060010190610887565b506108289291506108ce565b5b8082111561082857600081556001016108ba565b808211156108285760006108e282826108eb565b506001016108ce565b5080546108f7906110f1565b6000825580601f10610907575050565b601f0160209004906000526020600020908101906106d991906108b9565b805b82525050565b6060810161093b8286610925565b6109486020830185610925565b6109556040830184610925565b949350505050565b60008083601f84011261097257610972600080fd5b50813567ffffffffffffffff81111561098d5761098d600080fd5b6020830191508360018202830111156109a8576109a8600080fd5b9250929050565b600080602083850312156109c5576109c5600080fd5b823567ffffffffffffffff8111156109df576109df600080fd5b6109eb8582860161095d565b92509250509250929050565b6000610a3473ffffffffffffffffffffffffffffffffffffffff8316610a1b565b90565b73ffffffffffffffffffffffffffffffffffffffff1690565b92915050565b6000610a34826109f7565b6000610a3482610a3a565b61092781610a45565b60208101610a348284610a50565b801515610927565b60005b83811015610a8a578181015183820152602001610a72565b50506000910152565b6000610a9d825190565b808452602084019350610ab4818560208601610a6f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920192915050565b60408101610af18285610a67565b81810360208301526109558184610a93565b600073ffffffffffffffffffffffffffffffffffffffff8216610a34565b61092781610b03565b60208101610a348284610b21565b610b4181610b03565b81146106d957600080fd5b8035610a3481610b38565b600060208284031215610b6c57610b6c600080fd5b60006109558484610b4c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff82111715610beb57610beb610b78565b6040525050565b6000610bfd60405190565b9050610c098282610ba7565b919050565b80610b41565b8051610a3481610c0e565b600067ffffffffffffffff821115610c3957610c39610b78565b5060209081020190565b8051610a3481610b38565b6000610c61610c5c84610c1f565b610bf2565b83815290506020808201908402830185811115610c8057610c80600080fd5b835b81811015610ca45780610c958882610c43565b84525060209283019201610c82565b5050509392505050565b600082601f830112610cc257610cc2600080fd5b8151610955848260208601610c4e565b6000610ce0610c5c84610c1f565b83815290506020808201908402830185811115610cff57610cff600080fd5b835b81811015610ca45780610d148882610c14565b84525060209283019201610d01565b600082601f830112610d3757610d37600080fd5b8151610955848260208601610cd2565b600067ffffffffffffffff821115610d6157610d61610b78565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011660200192915050565b6000610d9e610c5c84610d47565b905082815260208101848484011115610db957610db9600080fd5b610dc4848285610a6f565b509392505050565b600082601f830112610de057610de0600080fd5b8151610955848260208601610d90565b6000610dfe610c5c84610c1f565b83815290506020808201908402830185811115610e1d57610e1d600080fd5b835b81811015610ca457805167ffffffffffffffff811115610e4157610e41600080fd5b808601610e4e8982610dcc565b8552505060209283019201610e1f565b600082601f830112610e7257610e72600080fd5b8151610955848260208601610df0565b600060c08284031215610e9757610e97600080fd5b610ea160c0610bf2565b90506000610eaf8484610c14565b8252506020610ec084848301610c14565b602083015250604082015167ffffffffffffffff811115610ee357610ee3600080fd5b610eef84828501610cae565b604083015250606082015167ffffffffffffffff811115610f1257610f12600080fd5b610f1e84828501610d23565b606083015250608082015167ffffffffffffffff811115610f4157610f41600080fd5b610f4d84828501610e5e565b60808301525060a0610f6184828501610c14565b60a08301525092915050565b600060208284031215610f8257610f82600080fd5b815167ffffffffffffffff811115610f9c57610f9c600080fd5b61095584828501610e82565b801515610b41565b8051610a3481610fa8565b600060208284031215610fd057610fd0600080fd5b60006109558484610fb0565b6000610fe88383610b21565b505060200190565b6000610a3482610a1b565b6000610a348254610ff0565b6000611011825490565b808452600083815260208082209501949081905b8381101561104f5761103682610ffb565b6110408882610fdc565b97505060019182019101611025565b509495945050505050565b6000610fe88383610925565b600081610a34565b6000610a348254611066565b6000611084825490565b808452600083815260208082209501949081905b8381101561104f576110a98261106e565b6110b3888261105a565b97505060019182019101611098565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60028104600182168061110557607f821691505b602082108103611117576111176110c2565b50919050565b6000815461112a816110f1565b80855260208501945060018216801561114a576001811461117e576111ac565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083168652602082151502860193506111ac565b60008581526020902060005b838110156111a65781548882015260019091019060200161118a565b87019450505b50505092915050565b60006111c1838361111d565b9392505050565b60006111d2825490565b808452602084019350836020820285016111f28560009081526020902090565b8060005b858110156112245784840389528161120e85826111b5565b60209a909a0199945050600191820191016111f6565b5091979650505050505050565b608080825281016112428187611007565b90508181036020830152611256818661107a565b9050818103604083015261126a81856111c8565b90506112796060830184610925565b95945050505050565b60006020828403121561129757611297600080fd5b60006109558484610c14565b602481526000602082017f476f7665726e616e636520636f6e74726163742068617320616c72656164792081527f7365742100000000000000000000000000000000000000000000000000000000602082015291505b5060400190565b60208082528101610a34816112a3565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181527f6464726573730000000000000000000000000000000000000000000000000000602082015291506112f9565b60208082528101610a3481611310565b60208082528181019081527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604083015260608201610a34565b6000610a34610a188381565b6113c9836113b4565b81547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60089490940293841b1916921b91909117905550565b60006103e48184846113c0565b8181101561142a57611422600082611402565b60010161140f565b5050565b601f8211156103e4576000818152602090206020601f850104810160208510156114555750805b6114676020601f86010483018261140f565b5050505050565b815167ffffffffffffffff81111561148857611488610b78565b61149282546110f1565b61149d82828561142e565b6020601f8311600181146114ef57600084156114b95750858201515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600886021c1981166002860217865550611584565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101561153d578885015182556020948501946001909201910161151d565b8683101561157757848901517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff601f89166008021c191682555b6001600288020188555050505b50505050505056fea26469706673582212209572ecaa6524b2560b89e23a1100669c96a89b2f55eb5b71a0dc5987808f04ec64736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063715018a61161005b578063715018a61461011a5780638da5cb5b14610122578063ab033ea914610148578063f2fde38b1461015b57600080fd5b80632b49d4251461008d5780634585e33b146100b75780635aa6e675146100cc5780636e04ff0d146100f9575b600080fd5b60025460035460075461009f92919083565b6040516100ae9392919061092d565b60405180910390f35b6100ca6100c53660046109af565b61016e565b005b6001546100ec9073ffffffffffffffffffffffffffffffffffffffff1681565b6040516100ae9190610a59565b61010c6101073660046109af565b6103e9565b6040516100ae929190610ae3565b6100ca6105bf565b60005473ffffffffffffffffffffffffffffffffffffffff166040516100ae9190610b2a565b6100ca610156366004610b57565b6105d3565b6100ca610169366004610b57565b61067b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341ec68706040518163ffffffff1660e01b8152600401600060405180830381865afa1580156101db573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526102219190810190610f6d565b80516002908155602080830151600355604083015180516102469260049201906107a2565b506060820151805161026291600384019160209091019061082c565b506080820151805161027e916004840191602090910190610867565b5060a09190910151600590910155600354421180159061032a5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631ad85cb56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610306573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032a9190610fbb565b801561033857506003544211155b61034157600080fd5b6001546007546040517f2656227d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90921691632656227d916103a191600491600591600691908401611231565b6020604051808303816000875af11580156103c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e49190611282565b505050565b60006060600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341ec68706040518163ffffffff1660e01b8152600401600060405180830381865afa15801561045a573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104a09190810190610f6d565b80516002908155602080830151600355604083015180516104c59260049201906107a2565b50606082015180516104e191600384019160209091019061082c565b50608082015180516104fd916004840191602090910190610867565b5060a09190910151600590910155600254158015906105a85750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631ad85cb56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610584573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a89190610fbb565b80156105b657506003544211155b91509250929050565b6105c76106dc565b6105d1600061072d565b565b6105db6106dc565b60015473ffffffffffffffffffffffffffffffffffffffff1615610634576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062b90611300565b60405180910390fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6106836106dc565b73ffffffffffffffffffffffffffffffffffffffff81166106d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062b9061136a565b6106d98161072d565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062b9061137a565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821561081c579160200282015b8281111561081c57825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906107c2565b506108289291506108b9565b5090565b82805482825590600052602060002090810192821561081c579160200282015b8281111561081c57825182559160200191906001019061084c565b8280548282559060005260206000209081019282156108ad579160200282015b828111156108ad578251829061089d908261146e565b5091602001919060010190610887565b506108289291506108ce565b5b8082111561082857600081556001016108ba565b808211156108285760006108e282826108eb565b506001016108ce565b5080546108f7906110f1565b6000825580601f10610907575050565b601f0160209004906000526020600020908101906106d991906108b9565b805b82525050565b6060810161093b8286610925565b6109486020830185610925565b6109556040830184610925565b949350505050565b60008083601f84011261097257610972600080fd5b50813567ffffffffffffffff81111561098d5761098d600080fd5b6020830191508360018202830111156109a8576109a8600080fd5b9250929050565b600080602083850312156109c5576109c5600080fd5b823567ffffffffffffffff8111156109df576109df600080fd5b6109eb8582860161095d565b92509250509250929050565b6000610a3473ffffffffffffffffffffffffffffffffffffffff8316610a1b565b90565b73ffffffffffffffffffffffffffffffffffffffff1690565b92915050565b6000610a34826109f7565b6000610a3482610a3a565b61092781610a45565b60208101610a348284610a50565b801515610927565b60005b83811015610a8a578181015183820152602001610a72565b50506000910152565b6000610a9d825190565b808452602084019350610ab4818560208601610a6f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920192915050565b60408101610af18285610a67565b81810360208301526109558184610a93565b600073ffffffffffffffffffffffffffffffffffffffff8216610a34565b61092781610b03565b60208101610a348284610b21565b610b4181610b03565b81146106d957600080fd5b8035610a3481610b38565b600060208284031215610b6c57610b6c600080fd5b60006109558484610b4c565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff82111715610beb57610beb610b78565b6040525050565b6000610bfd60405190565b9050610c098282610ba7565b919050565b80610b41565b8051610a3481610c0e565b600067ffffffffffffffff821115610c3957610c39610b78565b5060209081020190565b8051610a3481610b38565b6000610c61610c5c84610c1f565b610bf2565b83815290506020808201908402830185811115610c8057610c80600080fd5b835b81811015610ca45780610c958882610c43565b84525060209283019201610c82565b5050509392505050565b600082601f830112610cc257610cc2600080fd5b8151610955848260208601610c4e565b6000610ce0610c5c84610c1f565b83815290506020808201908402830185811115610cff57610cff600080fd5b835b81811015610ca45780610d148882610c14565b84525060209283019201610d01565b600082601f830112610d3757610d37600080fd5b8151610955848260208601610cd2565b600067ffffffffffffffff821115610d6157610d61610b78565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011660200192915050565b6000610d9e610c5c84610d47565b905082815260208101848484011115610db957610db9600080fd5b610dc4848285610a6f565b509392505050565b600082601f830112610de057610de0600080fd5b8151610955848260208601610d90565b6000610dfe610c5c84610c1f565b83815290506020808201908402830185811115610e1d57610e1d600080fd5b835b81811015610ca457805167ffffffffffffffff811115610e4157610e41600080fd5b808601610e4e8982610dcc565b8552505060209283019201610e1f565b600082601f830112610e7257610e72600080fd5b8151610955848260208601610df0565b600060c08284031215610e9757610e97600080fd5b610ea160c0610bf2565b90506000610eaf8484610c14565b8252506020610ec084848301610c14565b602083015250604082015167ffffffffffffffff811115610ee357610ee3600080fd5b610eef84828501610cae565b604083015250606082015167ffffffffffffffff811115610f1257610f12600080fd5b610f1e84828501610d23565b606083015250608082015167ffffffffffffffff811115610f4157610f41600080fd5b610f4d84828501610e5e565b60808301525060a0610f6184828501610c14565b60a08301525092915050565b600060208284031215610f8257610f82600080fd5b815167ffffffffffffffff811115610f9c57610f9c600080fd5b61095584828501610e82565b801515610b41565b8051610a3481610fa8565b600060208284031215610fd057610fd0600080fd5b60006109558484610fb0565b6000610fe88383610b21565b505060200190565b6000610a3482610a1b565b6000610a348254610ff0565b6000611011825490565b808452600083815260208082209501949081905b8381101561104f5761103682610ffb565b6110408882610fdc565b97505060019182019101611025565b509495945050505050565b6000610fe88383610925565b600081610a34565b6000610a348254611066565b6000611084825490565b808452600083815260208082209501949081905b8381101561104f576110a98261106e565b6110b3888261105a565b97505060019182019101611098565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60028104600182168061110557607f821691505b602082108103611117576111176110c2565b50919050565b6000815461112a816110f1565b80855260208501945060018216801561114a576001811461117e576111ac565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083168652602082151502860193506111ac565b60008581526020902060005b838110156111a65781548882015260019091019060200161118a565b87019450505b50505092915050565b60006111c1838361111d565b9392505050565b60006111d2825490565b808452602084019350836020820285016111f28560009081526020902090565b8060005b858110156112245784840389528161120e85826111b5565b60209a909a0199945050600191820191016111f6565b5091979650505050505050565b608080825281016112428187611007565b90508181036020830152611256818661107a565b9050818103604083015261126a81856111c8565b90506112796060830184610925565b95945050505050565b60006020828403121561129757611297600080fd5b60006109558484610c14565b602481526000602082017f476f7665726e616e636520636f6e74726163742068617320616c72656164792081527f7365742100000000000000000000000000000000000000000000000000000000602082015291505b5060400190565b60208082528101610a34816112a3565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181527f6464726573730000000000000000000000000000000000000000000000000000602082015291506112f9565b60208082528101610a3481611310565b60208082528181019081527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604083015260608201610a34565b6000610a34610a188381565b6113c9836113b4565b81547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60089490940293841b1916921b91909117905550565b60006103e48184846113c0565b8181101561142a57611422600082611402565b60010161140f565b5050565b601f8211156103e4576000818152602090206020601f850104810160208510156114555750805b6114676020601f86010483018261140f565b5050505050565b815167ffffffffffffffff81111561148857611488610b78565b61149282546110f1565b61149d82828561142e565b6020601f8311600181146114ef57600084156114b95750858201515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600886021c1981166002860217865550611584565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101561153d578885015182556020948501946001909201910161151d565b8683101561157757848901517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff601f89166008021c191682555b6001600288020188555050505b50505050505056fea26469706673582212209572ecaa6524b2560b89e23a1100669c96a89b2f55eb5b71a0dc5987808f04ec64736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 26,
        "contract": "contracts/Automation.sol:Automation",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 9436,
        "contract": "contracts/Automation.sol:Automation",
        "label": "governance",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IGovernance)9884"
      },
      {
        "astId": 9439,
        "contract": "contracts/Automation.sol:Automation",
        "label": "currentProposal",
        "offset": 0,
        "slot": "2",
        "type": "t_struct(CurrentProposal)9856_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes_storage)dyn_storage": {
        "base": "t_bytes_storage",
        "encoding": "dynamic_array",
        "label": "bytes[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(IGovernance)9884": {
        "encoding": "inplace",
        "label": "contract IGovernance",
        "numberOfBytes": "20"
      },
      "t_struct(CurrentProposal)9856_storage": {
        "encoding": "inplace",
        "label": "struct IGovernance.CurrentProposal",
        "members": [
          {
            "astId": 9842,
            "contract": "contracts/Automation.sol:Automation",
            "label": "proposalId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 9844,
            "contract": "contracts/Automation.sol:Automation",
            "label": "executionTime",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 9847,
            "contract": "contracts/Automation.sol:Automation",
            "label": "targets",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 9850,
            "contract": "contracts/Automation.sol:Automation",
            "label": "values",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 9853,
            "contract": "contracts/Automation.sol:Automation",
            "label": "calldatas",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_bytes_storage)dyn_storage"
          },
          {
            "astId": 9855,
            "contract": "contracts/Automation.sol:Automation",
            "label": "description",
            "offset": 0,
            "slot": "5",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
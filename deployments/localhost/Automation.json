{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "executionTime",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "description",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "contract IGovernance",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_governance",
          "type": "address"
        }
      ],
      "name": "setGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xfc1510bfc5a1437305db80edfd1270531555841bb7596b9da157cda60b9ecb1e",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1633506",
    "logsBloom": "0x
    "blockHash": "0x2f026a6e6326143b5abf7a3b52fe7276537dd5a1fd9e51f6cf8b8a430b0c4042",
    "transactionHash": "0xfc1510bfc5a1437305db80edfd1270531555841bb7596b9da157cda60b9ecb1e",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 2,
        "transactionHash": "0xfc1510bfc5a1437305db80edfd1270531555841bb7596b9da157cda60b9ecb1e",
        "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x2f026a6e6326143b5abf7a3b52fe7276537dd5a1fd9e51f6cf8b8a430b0c4042"
      }
    ],
    "blockNumber": 2,
    "cumulativeGasUsed": "1633506",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "aa76c5e364cb6d81bd96e8d3a7062031",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"executionTime\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"description\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"contract IGovernance\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"}],\"name\":\"setGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Automation.sol\":\"Automation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Automation.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"./IGovernance.sol\\\";\\r\\n\\r\\ncontract Automation is AutomationCompatibleInterface, Ownable {\\r\\n    IGovernance public governance;\\r\\n\\r\\n    IGovernance.CurrentProposal public currentProposal;\\r\\n\\r\\n    function setGovernance(address _governance) public onlyOwner {\\r\\n        require(\\r\\n            address(governance) == address(0),\\r\\n            \\\"Governance contract has already set!\\\"\\r\\n        );\\r\\n        governance = IGovernance(_governance);\\r\\n    }\\r\\n\\r\\n    function checkUpkeep(\\r\\n        bytes calldata /* checkData */\\r\\n    )\\r\\n        external\\r\\n        override\\r\\n        returns (bool upkeepNeeded, bytes memory /* performData */)\\r\\n    {\\r\\n        currentProposal = governance.getCurrentProposal();\\r\\n        upkeepNeeded =\\r\\n            (currentProposal.proposalId != 0) &&\\r\\n            (governance.isReadyToExecution()) &&\\r\\n            (currentProposal.executionTime >= block.timestamp);\\r\\n    }\\r\\n\\r\\n    function performUpkeep(bytes calldata /* performData */) external override {\\r\\n        currentProposal = governance.getCurrentProposal();\\r\\n        require(\\r\\n            (currentProposal.executionTime >= block.timestamp) &&\\r\\n                (governance.isReadyToExecution()) &&\\r\\n                (currentProposal.executionTime >= block.timestamp)\\r\\n        );\\r\\n        governance.execute(\\r\\n            currentProposal.targets,\\r\\n            currentProposal.values,\\r\\n            currentProposal.calldatas,\\r\\n            currentProposal.description\\r\\n        );\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x283df9bb0e7836a0e87d7b5a4ec263696bbf075aae7a474a223b0efa8183d0e3\",\"license\":\"MIT\"},\"contracts/IGovernance.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\ninterface IGovernance {\\r\\n    struct CurrentProposal {\\r\\n        uint256 proposalId;\\r\\n        uint256 executionTime;\\r\\n        address[] targets;\\r\\n        uint256[] values;\\r\\n        bytes[] calldatas;\\r\\n        bytes32 description;\\r\\n    }\\r\\n\\r\\n    function execute(\\r\\n        address[] memory targets,\\r\\n        uint256[] memory values,\\r\\n        bytes[] memory calldatas,\\r\\n        bytes32 descriptionHash\\r\\n    ) external payable returns (uint256);\\r\\n\\r\\n    function getCurrentProposal()\\r\\n        external\\r\\n        view\\r\\n        returns (CurrentProposal memory);\\r\\n\\r\\n    function isReadyToExecution() external view returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0x195084fa96037c1569fb70c8c5fa15efce5e3ffdec0cd484ab0ddeca91859db1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611c248061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063715018a61161005b578063715018a6146101185780638da5cb5b14610122578063ab033ea914610140578063f2fde38b1461015c57610088565b80632b49d4251461008d5780634585e33b146100ad5780635aa6e675146100c95780636e04ff0d146100e7575b600080fd5b610095610178565b6040516100a493929190610ad6565b60405180910390f35b6100c760048036038101906100c29190610b86565b610190565b005b6100d1610415565b6040516100de9190610c52565b60405180910390f35b61010160048036038101906100fc9190610b86565b61043b565b60405161010f929190610d18565b60405180910390f35b61012061060c565b005b61012a610620565b6040516101379190610d69565b60405180910390f35b61015a60048036038101906101559190610db0565b610649565b005b61017660048036038101906101719190610db0565b610726565b005b60028060000154908060010154908060050154905083565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341ec68706040518163ffffffff1660e01b8152600401600060405180830381865afa1580156101fd573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061022691906112d0565b6002600082015181600001556020820151816001015560408201518160020190805190602001906102589291906108f3565b50606082015181600301908051906020019061027592919061097d565b5060808201518160040190805190602001906102929291906109ca565b5060a0820151816005015590505042600260010154101580156103425750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631ad85cb56040518163ffffffff1660e01b8152600401602060405180830381865afa15801561031d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103419190611345565b5b801561035357504260026001015410155b61035c57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632656227d60028001600260030160026004016002600501546040518563ffffffff1660e01b81526004016103cd9493929190611767565b6020604051808303816000875af11580156103ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041091906117c1565b505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006060600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341ec68706040518163ffffffff1660e01b8152600401600060405180830381865afa1580156104ac573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104d591906112d0565b6002600082015181600001556020820151816001015560408201518160020190805190602001906105079291906108f3565b50606082015181600301908051906020019061052492919061097d565b5060808201518160040190805190602001906105419291906109ca565b5060a082015181600501559050506000600260000154141580156105f25750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631ad85cb56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f19190611345565b5b801561060357504260026001015410155b91509250929050565b6106146107a9565b61061e6000610827565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106516107a9565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d990611871565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61072e6107a9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361079d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490611903565b60405180910390fd5b6107a681610827565b50565b6107b16108eb565b73ffffffffffffffffffffffffffffffffffffffff166107cf610620565b73ffffffffffffffffffffffffffffffffffffffff1614610825576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081c9061196f565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b82805482825590600052602060002090810192821561096c579160200282015b8281111561096b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610913565b5b5090506109799190610a23565b5090565b8280548282559060005260206000209081019282156109b9579160200282015b828111156109b857825182559160200191906001019061099d565b5b5090506109c69190610a23565b5090565b828054828255906000526020600020908101928215610a12579160200282015b82811115610a11578251829081610a019190611b1c565b50916020019190600101906109ea565b5b509050610a1f9190610a40565b5090565b5b80821115610a3c576000816000905550600101610a24565b5090565b5b80821115610a605760008181610a579190610a64565b50600101610a41565b5090565b508054610a70906115f7565b6000825580601f10610a825750610aa1565b601f016020900490600052602060002090810190610aa09190610a23565b5b50565b6000819050919050565b610ab781610aa4565b82525050565b6000819050919050565b610ad081610abd565b82525050565b6000606082019050610aeb6000830186610aae565b610af86020830185610aae565b610b056040830184610ac7565b949350505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610b4657610b45610b21565b5b8235905067ffffffffffffffff811115610b6357610b62610b26565b5b602083019150836001820283011115610b7f57610b7e610b2b565b5b9250929050565b60008060208385031215610b9d57610b9c610b17565b5b600083013567ffffffffffffffff811115610bbb57610bba610b1c565b5b610bc785828601610b30565b92509250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610c18610c13610c0e84610bd3565b610bf3565b610bd3565b9050919050565b6000610c2a82610bfd565b9050919050565b6000610c3c82610c1f565b9050919050565b610c4c81610c31565b82525050565b6000602082019050610c676000830184610c43565b92915050565b60008115159050919050565b610c8281610c6d565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610cc2578082015181840152602081019050610ca7565b60008484015250505050565b6000601f19601f8301169050919050565b6000610cea82610c88565b610cf48185610c93565b9350610d04818560208601610ca4565b610d0d81610cce565b840191505092915050565b6000604082019050610d2d6000830185610c79565b8181036020830152610d3f8184610cdf565b90509392505050565b6000610d5382610bd3565b9050919050565b610d6381610d48565b82525050565b6000602082019050610d7e6000830184610d5a565b92915050565b610d8d81610d48565b8114610d9857600080fd5b50565b600081359050610daa81610d84565b92915050565b600060208284031215610dc657610dc5610b17565b5b6000610dd484828501610d9b565b91505092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e1a82610cce565b810181811067ffffffffffffffff82111715610e3957610e38610de2565b5b80604052505050565b6000610e4c610b0d565b9050610e588282610e11565b919050565b600080fd5b610e6b81610aa4565b8114610e7657600080fd5b50565b600081519050610e8881610e62565b92915050565b600067ffffffffffffffff821115610ea957610ea8610de2565b5b602082029050602081019050919050565b600081519050610ec981610d84565b92915050565b6000610ee2610edd84610e8e565b610e42565b90508083825260208201905060208402830185811115610f0557610f04610b2b565b5b835b81811015610f2e5780610f1a8882610eba565b845260208401935050602081019050610f07565b5050509392505050565b600082601f830112610f4d57610f4c610b21565b5b8151610f5d848260208601610ecf565b91505092915050565b600067ffffffffffffffff821115610f8157610f80610de2565b5b602082029050602081019050919050565b6000610fa5610fa084610f66565b610e42565b90508083825260208201905060208402830185811115610fc857610fc7610b2b565b5b835b81811015610ff15780610fdd8882610e79565b845260208401935050602081019050610fca565b5050509392505050565b600082601f8301126110105761100f610b21565b5b8151611020848260208601610f92565b91505092915050565b600067ffffffffffffffff82111561104457611043610de2565b5b602082029050602081019050919050565b600080fd5b600067ffffffffffffffff82111561107557611074610de2565b5b61107e82610cce565b9050602081019050919050565b600061109e6110998461105a565b610e42565b9050828152602081018484840111156110ba576110b9611055565b5b6110c5848285610ca4565b509392505050565b600082601f8301126110e2576110e1610b21565b5b81516110f284826020860161108b565b91505092915050565b600061110e61110984611029565b610e42565b9050808382526020820190506020840283018581111561113157611130610b2b565b5b835b8181101561117857805167ffffffffffffffff81111561115657611155610b21565b5b80860161116389826110cd565b85526020850194505050602081019050611133565b5050509392505050565b600082601f83011261119757611196610b21565b5b81516111a78482602086016110fb565b91505092915050565b6111b981610abd565b81146111c457600080fd5b50565b6000815190506111d6816111b0565b92915050565b600060c082840312156111f2576111f1610ddd565b5b6111fc60c0610e42565b9050600061120c84828501610e79565b600083015250602061122084828501610e79565b602083015250604082015167ffffffffffffffff81111561124457611243610e5d565b5b61125084828501610f38565b604083015250606082015167ffffffffffffffff81111561127457611273610e5d565b5b61128084828501610ffb565b606083015250608082015167ffffffffffffffff8111156112a4576112a3610e5d565b5b6112b084828501611182565b60808301525060a06112c4848285016111c7565b60a08301525092915050565b6000602082840312156112e6576112e5610b17565b5b600082015167ffffffffffffffff81111561130457611303610b1c565b5b611310848285016111dc565b91505092915050565b61132281610c6d565b811461132d57600080fd5b50565b60008151905061133f81611319565b92915050565b60006020828403121561135b5761135a610b17565b5b600061136984828501611330565b91505092915050565b600081549050919050565b600082825260208201905092915050565b60008190508160005260206000209050919050565b6113ac81610d48565b82525050565b60006113be83836113a3565b60208301905092915050565b60008160001c9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061140a611405836113ca565b6113d7565b9050919050565b600061141d82546113f7565b9050919050565b6000600182019050919050565b600061143c82611372565b611446818561137d565b93506114518361138e565b8060005b838110156114895761146682611411565b61147088826113b2565b975061147b83611424565b925050600181019050611455565b5085935050505092915050565b600081549050919050565b600082825260208201905092915050565b60008190508160005260206000209050919050565b6114d081610aa4565b82525050565b60006114e283836114c7565b60208301905092915050565b6000819050919050565b600061150b611506836113ca565b6114ee565b9050919050565b600061151e82546114f8565b9050919050565b6000600182019050919050565b600061153d82611496565b61154781856114a1565b9350611552836114b2565b8060005b8381101561158a5761156782611512565b61157188826114d6565b975061157c83611525565b925050600181019050611556565b5085935050505092915050565b600081549050919050565b600082825260208201905092915050565b60008190508160005260206000209050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061160f57607f821691505b602082108103611622576116216115c8565b5b50919050565b600082825260208201905092915050565b60008190508160005260206000209050919050565b6000815461165b816115f7565b6116658186611628565b945060018216600081146116805760018114611696576116c9565b60ff1983168652811515602002860193506116c9565b61169f85611639565b60005b838110156116c1578154818901526001820191506020810190506116a2565b808801955050505b50505092915050565b60006116de838361164e565b905092915050565b6000600182019050919050565b60006116fe82611597565b61170881856115a2565b93508360208202850161171a856115b3565b8060005b858110156117555784840389528161173685826116d2565b9450611741836116e6565b925060208a0199505060018101905061171e565b50829750879550505050505092915050565b600060808201905081810360008301526117818187611431565b905081810360208301526117958186611532565b905081810360408301526117a981856116f3565b90506117b86060830184610ac7565b95945050505050565b6000602082840312156117d7576117d6610b17565b5b60006117e584828501610e79565b91505092915050565b600082825260208201905092915050565b7f476f7665726e616e636520636f6e74726163742068617320616c72656164792060008201527f7365742100000000000000000000000000000000000000000000000000000000602082015250565b600061185b6024836117ee565b9150611866826117ff565b604082019050919050565b6000602082019050818103600083015261188a8161184e565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006118ed6026836117ee565b91506118f882611891565b604082019050919050565b6000602082019050818103600083015261191c816118e0565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006119596020836117ee565b915061196482611923565b602082019050919050565b600060208201905081810360008301526119888161194c565b9050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026119dc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261199f565b6119e6868361199f565b95508019841693508086168417925050509392505050565b6000611a19611a14611a0f84610aa4565b610bf3565b610aa4565b9050919050565b6000819050919050565b611a33836119fe565b611a47611a3f82611a20565b8484546119ac565b825550505050565b600090565b611a5c611a4f565b611a67818484611a2a565b505050565b5b81811015611a8b57611a80600082611a54565b600181019050611a6d565b5050565b601f821115611ad057611aa181611639565b611aaa8461198f565b81016020851015611ab9578190505b611acd611ac58561198f565b830182611a6c565b50505b505050565b600082821c905092915050565b6000611af360001984600802611ad5565b1980831691505092915050565b6000611b0c8383611ae2565b9150826002028217905092915050565b611b2582610c88565b67ffffffffffffffff811115611b3e57611b3d610de2565b5b611b4882546115f7565b611b53828285611a8f565b600060209050601f831160018114611b865760008415611b74578287015190505b611b7e8582611b00565b865550611be6565b601f198416611b9486611639565b60005b82811015611bbc57848901518255600182019150602085019450602081019050611b97565b86831015611bd95784890151611bd5601f891682611ae2565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220fa06c65592784cbaa6e2ec6d986017d74d156053ca93c17f11b908fc807ec79f64736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063715018a61161005b578063715018a6146101185780638da5cb5b14610122578063ab033ea914610140578063f2fde38b1461015c57610088565b80632b49d4251461008d5780634585e33b146100ad5780635aa6e675146100c95780636e04ff0d146100e7575b600080fd5b610095610178565b6040516100a493929190610ad6565b60405180910390f35b6100c760048036038101906100c29190610b86565b610190565b005b6100d1610415565b6040516100de9190610c52565b60405180910390f35b61010160048036038101906100fc9190610b86565b61043b565b60405161010f929190610d18565b60405180910390f35b61012061060c565b005b61012a610620565b6040516101379190610d69565b60405180910390f35b61015a60048036038101906101559190610db0565b610649565b005b61017660048036038101906101719190610db0565b610726565b005b60028060000154908060010154908060050154905083565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341ec68706040518163ffffffff1660e01b8152600401600060405180830381865afa1580156101fd573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061022691906112d0565b6002600082015181600001556020820151816001015560408201518160020190805190602001906102589291906108f3565b50606082015181600301908051906020019061027592919061097d565b5060808201518160040190805190602001906102929291906109ca565b5060a0820151816005015590505042600260010154101580156103425750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631ad85cb56040518163ffffffff1660e01b8152600401602060405180830381865afa15801561031d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103419190611345565b5b801561035357504260026001015410155b61035c57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632656227d60028001600260030160026004016002600501546040518563ffffffff1660e01b81526004016103cd9493929190611767565b6020604051808303816000875af11580156103ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041091906117c1565b505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006060600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166341ec68706040518163ffffffff1660e01b8152600401600060405180830381865afa1580156104ac573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104d591906112d0565b6002600082015181600001556020820151816001015560408201518160020190805190602001906105079291906108f3565b50606082015181600301908051906020019061052492919061097d565b5060808201518160040190805190602001906105419291906109ca565b5060a082015181600501559050506000600260000154141580156105f25750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631ad85cb56040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f19190611345565b5b801561060357504260026001015410155b91509250929050565b6106146107a9565b61061e6000610827565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106516107a9565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d990611871565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61072e6107a9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361079d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490611903565b60405180910390fd5b6107a681610827565b50565b6107b16108eb565b73ffffffffffffffffffffffffffffffffffffffff166107cf610620565b73ffffffffffffffffffffffffffffffffffffffff1614610825576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081c9061196f565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b82805482825590600052602060002090810192821561096c579160200282015b8281111561096b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610913565b5b5090506109799190610a23565b5090565b8280548282559060005260206000209081019282156109b9579160200282015b828111156109b857825182559160200191906001019061099d565b5b5090506109c69190610a23565b5090565b828054828255906000526020600020908101928215610a12579160200282015b82811115610a11578251829081610a019190611b1c565b50916020019190600101906109ea565b5b509050610a1f9190610a40565b5090565b5b80821115610a3c576000816000905550600101610a24565b5090565b5b80821115610a605760008181610a579190610a64565b50600101610a41565b5090565b508054610a70906115f7565b6000825580601f10610a825750610aa1565b601f016020900490600052602060002090810190610aa09190610a23565b5b50565b6000819050919050565b610ab781610aa4565b82525050565b6000819050919050565b610ad081610abd565b82525050565b6000606082019050610aeb6000830186610aae565b610af86020830185610aae565b610b056040830184610ac7565b949350505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610b4657610b45610b21565b5b8235905067ffffffffffffffff811115610b6357610b62610b26565b5b602083019150836001820283011115610b7f57610b7e610b2b565b5b9250929050565b60008060208385031215610b9d57610b9c610b17565b5b600083013567ffffffffffffffff811115610bbb57610bba610b1c565b5b610bc785828601610b30565b92509250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610c18610c13610c0e84610bd3565b610bf3565b610bd3565b9050919050565b6000610c2a82610bfd565b9050919050565b6000610c3c82610c1f565b9050919050565b610c4c81610c31565b82525050565b6000602082019050610c676000830184610c43565b92915050565b60008115159050919050565b610c8281610c6d565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610cc2578082015181840152602081019050610ca7565b60008484015250505050565b6000601f19601f8301169050919050565b6000610cea82610c88565b610cf48185610c93565b9350610d04818560208601610ca4565b610d0d81610cce565b840191505092915050565b6000604082019050610d2d6000830185610c79565b8181036020830152610d3f8184610cdf565b90509392505050565b6000610d5382610bd3565b9050919050565b610d6381610d48565b82525050565b6000602082019050610d7e6000830184610d5a565b92915050565b610d8d81610d48565b8114610d9857600080fd5b50565b600081359050610daa81610d84565b92915050565b600060208284031215610dc657610dc5610b17565b5b6000610dd484828501610d9b565b91505092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e1a82610cce565b810181811067ffffffffffffffff82111715610e3957610e38610de2565b5b80604052505050565b6000610e4c610b0d565b9050610e588282610e11565b919050565b600080fd5b610e6b81610aa4565b8114610e7657600080fd5b50565b600081519050610e8881610e62565b92915050565b600067ffffffffffffffff821115610ea957610ea8610de2565b5b602082029050602081019050919050565b600081519050610ec981610d84565b92915050565b6000610ee2610edd84610e8e565b610e42565b90508083825260208201905060208402830185811115610f0557610f04610b2b565b5b835b81811015610f2e5780610f1a8882610eba565b845260208401935050602081019050610f07565b5050509392505050565b600082601f830112610f4d57610f4c610b21565b5b8151610f5d848260208601610ecf565b91505092915050565b600067ffffffffffffffff821115610f8157610f80610de2565b5b602082029050602081019050919050565b6000610fa5610fa084610f66565b610e42565b90508083825260208201905060208402830185811115610fc857610fc7610b2b565b5b835b81811015610ff15780610fdd8882610e79565b845260208401935050602081019050610fca565b5050509392505050565b600082601f8301126110105761100f610b21565b5b8151611020848260208601610f92565b91505092915050565b600067ffffffffffffffff82111561104457611043610de2565b5b602082029050602081019050919050565b600080fd5b600067ffffffffffffffff82111561107557611074610de2565b5b61107e82610cce565b9050602081019050919050565b600061109e6110998461105a565b610e42565b9050828152602081018484840111156110ba576110b9611055565b5b6110c5848285610ca4565b509392505050565b600082601f8301126110e2576110e1610b21565b5b81516110f284826020860161108b565b91505092915050565b600061110e61110984611029565b610e42565b9050808382526020820190506020840283018581111561113157611130610b2b565b5b835b8181101561117857805167ffffffffffffffff81111561115657611155610b21565b5b80860161116389826110cd565b85526020850194505050602081019050611133565b5050509392505050565b600082601f83011261119757611196610b21565b5b81516111a78482602086016110fb565b91505092915050565b6111b981610abd565b81146111c457600080fd5b50565b6000815190506111d6816111b0565b92915050565b600060c082840312156111f2576111f1610ddd565b5b6111fc60c0610e42565b9050600061120c84828501610e79565b600083015250602061122084828501610e79565b602083015250604082015167ffffffffffffffff81111561124457611243610e5d565b5b61125084828501610f38565b604083015250606082015167ffffffffffffffff81111561127457611273610e5d565b5b61128084828501610ffb565b606083015250608082015167ffffffffffffffff8111156112a4576112a3610e5d565b5b6112b084828501611182565b60808301525060a06112c4848285016111c7565b60a08301525092915050565b6000602082840312156112e6576112e5610b17565b5b600082015167ffffffffffffffff81111561130457611303610b1c565b5b611310848285016111dc565b91505092915050565b61132281610c6d565b811461132d57600080fd5b50565b60008151905061133f81611319565b92915050565b60006020828403121561135b5761135a610b17565b5b600061136984828501611330565b91505092915050565b600081549050919050565b600082825260208201905092915050565b60008190508160005260206000209050919050565b6113ac81610d48565b82525050565b60006113be83836113a3565b60208301905092915050565b60008160001c9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061140a611405836113ca565b6113d7565b9050919050565b600061141d82546113f7565b9050919050565b6000600182019050919050565b600061143c82611372565b611446818561137d565b93506114518361138e565b8060005b838110156114895761146682611411565b61147088826113b2565b975061147b83611424565b925050600181019050611455565b5085935050505092915050565b600081549050919050565b600082825260208201905092915050565b60008190508160005260206000209050919050565b6114d081610aa4565b82525050565b60006114e283836114c7565b60208301905092915050565b6000819050919050565b600061150b611506836113ca565b6114ee565b9050919050565b600061151e82546114f8565b9050919050565b6000600182019050919050565b600061153d82611496565b61154781856114a1565b9350611552836114b2565b8060005b8381101561158a5761156782611512565b61157188826114d6565b975061157c83611525565b925050600181019050611556565b5085935050505092915050565b600081549050919050565b600082825260208201905092915050565b60008190508160005260206000209050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061160f57607f821691505b602082108103611622576116216115c8565b5b50919050565b600082825260208201905092915050565b60008190508160005260206000209050919050565b6000815461165b816115f7565b6116658186611628565b945060018216600081146116805760018114611696576116c9565b60ff1983168652811515602002860193506116c9565b61169f85611639565b60005b838110156116c1578154818901526001820191506020810190506116a2565b808801955050505b50505092915050565b60006116de838361164e565b905092915050565b6000600182019050919050565b60006116fe82611597565b61170881856115a2565b93508360208202850161171a856115b3565b8060005b858110156117555784840389528161173685826116d2565b9450611741836116e6565b925060208a0199505060018101905061171e565b50829750879550505050505092915050565b600060808201905081810360008301526117818187611431565b905081810360208301526117958186611532565b905081810360408301526117a981856116f3565b90506117b86060830184610ac7565b95945050505050565b6000602082840312156117d7576117d6610b17565b5b60006117e584828501610e79565b91505092915050565b600082825260208201905092915050565b7f476f7665726e616e636520636f6e74726163742068617320616c72656164792060008201527f7365742100000000000000000000000000000000000000000000000000000000602082015250565b600061185b6024836117ee565b9150611866826117ff565b604082019050919050565b6000602082019050818103600083015261188a8161184e565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006118ed6026836117ee565b91506118f882611891565b604082019050919050565b6000602082019050818103600083015261191c816118e0565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006119596020836117ee565b915061196482611923565b602082019050919050565b600060208201905081810360008301526119888161194c565b9050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026119dc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261199f565b6119e6868361199f565b95508019841693508086168417925050509392505050565b6000611a19611a14611a0f84610aa4565b610bf3565b610aa4565b9050919050565b6000819050919050565b611a33836119fe565b611a47611a3f82611a20565b8484546119ac565b825550505050565b600090565b611a5c611a4f565b611a67818484611a2a565b505050565b5b81811015611a8b57611a80600082611a54565b600181019050611a6d565b5050565b601f821115611ad057611aa181611639565b611aaa8461198f565b81016020851015611ab9578190505b611acd611ac58561198f565b830182611a6c565b50505b505050565b600082821c905092915050565b6000611af360001984600802611ad5565b1980831691505092915050565b6000611b0c8383611ae2565b9150826002028217905092915050565b611b2582610c88565b67ffffffffffffffff811115611b3e57611b3d610de2565b5b611b4882546115f7565b611b53828285611a8f565b600060209050601f831160018114611b865760008415611b74578287015190505b611b7e8582611b00565b865550611be6565b601f198416611b9486611639565b60005b82811015611bbc57848901518255600182019150602085019450602081019050611b97565b86831015611bd95784890151611bd5601f891682611ae2565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220fa06c65592784cbaa6e2ec6d986017d74d156053ca93c17f11b908fc807ec79f64736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 26,
        "contract": "contracts/Automation.sol:Automation",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 9436,
        "contract": "contracts/Automation.sol:Automation",
        "label": "governance",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IGovernance)9884"
      },
      {
        "astId": 9439,
        "contract": "contracts/Automation.sol:Automation",
        "label": "currentProposal",
        "offset": 0,
        "slot": "2",
        "type": "t_struct(CurrentProposal)9856_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes_storage)dyn_storage": {
        "base": "t_bytes_storage",
        "encoding": "dynamic_array",
        "label": "bytes[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(IGovernance)9884": {
        "encoding": "inplace",
        "label": "contract IGovernance",
        "numberOfBytes": "20"
      },
      "t_struct(CurrentProposal)9856_storage": {
        "encoding": "inplace",
        "label": "struct IGovernance.CurrentProposal",
        "members": [
          {
            "astId": 9842,
            "contract": "contracts/Automation.sol:Automation",
            "label": "proposalId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 9844,
            "contract": "contracts/Automation.sol:Automation",
            "label": "executionTime",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 9847,
            "contract": "contracts/Automation.sol:Automation",
            "label": "targets",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 9850,
            "contract": "contracts/Automation.sol:Automation",
            "label": "values",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 9853,
            "contract": "contracts/Automation.sol:Automation",
            "label": "calldatas",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_bytes_storage)dyn_storage"
          },
          {
            "astId": 9855,
            "contract": "contracts/Automation.sol:Automation",
            "label": "description",
            "offset": 0,
            "slot": "5",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}